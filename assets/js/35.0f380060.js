(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{224:function(e,t,s){"use strict";s.r(t);var a=s(0),r=Object(a.a)({},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h2",{attrs:{id:"博客记录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#博客记录","aria-hidden":"true"}},[e._v("#")]),e._v(" 博客记录")]),e._v(" "),s("h3",{attrs:{id:"具体内容请点击下面的博客或者从导航栏的分类与标签进行观看"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#具体内容请点击下面的博客或者从导航栏的分类与标签进行观看","aria-hidden":"true"}},[e._v("#")]),e._v(" 具体内容请点击下面的博客或者从导航栏的分类与标签进行观看")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("关于时间线，我的设计思路就是对文章页的数据数组进行解析并使用vue.js的v-for循环渲染成Time-Line的dom元素。 css样式可以参考几个成熟的UI库(ant-design，iview，element...)，或者去百度'时间轴css'都能找到。数据处理的关键是利用VuePress已注册到根结点的data数据($page，$site...)，其中的$site中包含所有的页面数据，将$site.pages数组处理一下就得到了我所有的文章列表。\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("来源："),s("a",{attrs:{href:"https://segmentfault.com/a/1190000017890986?utm_source=tag-newest",target:"_blank",rel:"noopener noreferrer"}},[e._v("mulander"),s("OutboundLink")],1)])])},[],!1,null,null,null);t.default=r.exports}}]);